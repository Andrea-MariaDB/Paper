From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: kashike <kashike@vq.lc>
Date: Wed, 13 Apr 2016 20:21:38 -0700
Subject: [PATCH] Add handshake event to allow plugins to handle client
 handshaking logic themselves


diff --git a/src/main/java/net/minecraft/server/network/ServerHandshakePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerHandshakePacketListenerImpl.java
index afa629c4ae58f133e8bdcca434d8c0dd6e96d345..fd8a1ab0ebcbdef0013151e5e739ab6eb84e8326 100644
--- a/src/main/java/net/minecraft/server/network/ServerHandshakePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerHandshakePacketListenerImpl.java
@@ -25,7 +25,7 @@ public class ServerHandshakePacketListenerImpl implements ServerHandshakePacketL
     // CraftBukkit end
     private static final Component IGNORE_STATUS_REASON = new TextComponent("Ignoring status request");
     private final MinecraftServer server;
-    private final Connection connection;
+    private final Connection connection; final Connection getNetworkManager() { return this.connection; } // Paper - OBFHELPER
 
     public ServerHandshakePacketListenerImpl(MinecraftServer server, Connection connection) {
         this.server = server;
@@ -84,8 +84,34 @@ public class ServerHandshakePacketListenerImpl implements ServerHandshakePacketL
                     this.connection.disconnect(chatmessage);
                 } else {
                     this.connection.setListener(new ServerLoginPacketListenerImpl(this.server, this.connection));
+                // Paper start - handshake event
+                boolean proxyLogicEnabled = org.spigotmc.SpigotConfig.bungee;
+                boolean handledByEvent = false;
+                // Try and handle the handshake through the event
+                if (com.destroystokyo.paper.event.player.PlayerHandshakeEvent.getHandlerList().getRegisteredListeners().length != 0) { // Hello? Can you hear me?
+                    java.net.InetSocketAddress socketAddress = (java.net.InetSocketAddress) this.getNetworkManager().address;
+                    com.destroystokyo.paper.event.player.PlayerHandshakeEvent event = new com.destroystokyo.paper.event.player.PlayerHandshakeEvent(packet.hostName, socketAddress.getAddress().getHostAddress(), !proxyLogicEnabled);
+                    if (event.callEvent()) {
+                        // If we've failed somehow, let the client know so and go no further.
+                        if (event.isFailed()) {
+                            chatmessage = new TranslatableComponent(event.getFailMessage());
+                            this.getNetworkManager().send(new ClientboundLoginDisconnectPacket(chatmessage));
+                            this.getNetworkManager().disconnect(chatmessage);
+                            return;
+                        }
+
+                        if (event.getServerHostname() != null) packet.hostName = event.getServerHostname();
+                        if (event.getSocketAddressHostname() != null) this.getNetworkManager().address = new java.net.InetSocketAddress(event.getSocketAddressHostname(), socketAddress.getPort());
+                        this.getNetworkManager().spoofedUUID = event.getUniqueId();
+                        this.getNetworkManager().spoofedProfile = gson.fromJson(event.getPropertiesJson(), com.mojang.authlib.properties.Property[].class);
+                        handledByEvent = true; // Hooray, we did it!
+                    }
+                }
+                // Don't try and handle default logic if it's been handled by the event.
+                if (!handledByEvent && proxyLogicEnabled) {
+                // Paper end
                     // Spigot Start
-                    if (org.spigotmc.SpigotConfig.bungee) {
+                //if (org.spigotmc.SpigotConfig.bungee) { // Paper - comment out, we check above!
                         String[] split = packet.hostName.split("\00");
                         if ( split.length == 3 || split.length == 4 ) {
                             packet.hostName = split[0];
